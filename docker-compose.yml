version: "3.2"
services:

  db:
    restart: always
    image: postgres:13
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=flashcards
      - POSTGRES_USER=colin
      - POSTGRES_PASSWORD=mypassword
    ports:
      - "5432:5432"
    networks:
      - db-net
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    restart: always
    container_name: code
    command : bash -c "python check_db.py --service-name db --ip db --port 5432 && 
                      python manage.py migrate &&
                      python manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./backend/settings.ini
    build:
      context: ./backend/
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - db-net

  frontend:
    restart: always
    command : npm start
    container_name: front
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    stdin_open: true
    depends_on:
      - backend
    networks:
      - db-net

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - db-net

networks:
  db-net:
    driver: bridge

volumes:
  postgres_data:
